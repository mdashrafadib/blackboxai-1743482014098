{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import Platform from\"react-native-web/dist/exports/Platform\";import AsyncStorage from'@react-native-async-storage/async-storage';var StorageManager=function(){function StorageManager(){_classCallCheck(this,StorageManager);}return _createClass(StorageManager,null,[{key:\"saveFile\",value:function(){var _saveFile=_asyncToGenerator(function*(key,data){try{if(Platform.OS==='web'){localStorage.setItem(key,JSON.stringify(data));}else{yield AsyncStorage.setItem(key,JSON.stringify(data));}return true;}catch(error){console.error('Error saving file:',error);return false;}});function saveFile(_x,_x2){return _saveFile.apply(this,arguments);}return saveFile;}()},{key:\"loadFile\",value:function(){var _loadFile=_asyncToGenerator(function*(key){try{var data;if(Platform.OS==='web'){data=localStorage.getItem(key);}else{data=yield AsyncStorage.getItem(key);}return data?JSON.parse(data):null;}catch(error){console.error('Error loading file:',error);return null;}});function loadFile(_x3){return _loadFile.apply(this,arguments);}return loadFile;}()},{key:\"removeFile\",value:function(){var _removeFile=_asyncToGenerator(function*(key){try{if(Platform.OS==='web'){localStorage.removeItem(key);}else{yield AsyncStorage.removeItem(key);}return true;}catch(error){console.error('Error removing file:',error);return false;}});function removeFile(_x4){return _removeFile.apply(this,arguments);}return removeFile;}()},{key:\"clearStorage\",value:function(){var _clearStorage=_asyncToGenerator(function*(){try{if(Platform.OS==='web'){localStorage.clear();}else{yield AsyncStorage.clear();}return true;}catch(error){console.error('Error clearing storage:',error);return false;}});function clearStorage(){return _clearStorage.apply(this,arguments);}return clearStorage;}()}]);}();export default StorageManager;","map":{"version":3,"names":["AsyncStorage","StorageManager","_classCallCheck","_createClass","key","value","_saveFile","_asyncToGenerator","data","Platform","OS","localStorage","setItem","JSON","stringify","error","console","saveFile","_x","_x2","apply","arguments","_loadFile","getItem","parse","loadFile","_x3","_removeFile","removeItem","removeFile","_x4","_clearStorage","clear","clearStorage"],"sources":["/project/sandbox/user-workspace/src/utils/StorageManager.js"],"sourcesContent":["import { Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nclass StorageManager {\n  static async saveFile(key, data) {\n    try {\n      if (Platform.OS === 'web') {\n        localStorage.setItem(key, JSON.stringify(data));\n      } else {\n        await AsyncStorage.setItem(key, JSON.stringify(data));\n      }\n      return true;\n    } catch (error) {\n      console.error('Error saving file:', error);\n      return false;\n    }\n  }\n\n  static async loadFile(key) {\n    try {\n      let data;\n      if (Platform.OS === 'web') {\n        data = localStorage.getItem(key);\n      } else {\n        data = await AsyncStorage.getItem(key);\n      }\n      return data ? JSON.parse(data) : null;\n    } catch (error) {\n      console.error('Error loading file:', error);\n      return null;\n    }\n  }\n\n  static async removeFile(key) {\n    try {\n      if (Platform.OS === 'web') {\n        localStorage.removeItem(key);\n      } else {\n        await AsyncStorage.removeItem(key);\n      }\n      return true;\n    } catch (error) {\n      console.error('Error removing file:', error);\n      return false;\n    }\n  }\n\n  static async clearStorage() {\n    try {\n      if (Platform.OS === 'web') {\n        localStorage.clear();\n      } else {\n        await AsyncStorage.clear();\n      }\n      return true;\n    } catch (error) {\n      console.error('Error clearing storage:', error);\n      return false;\n    }\n  }\n}\n\nexport default StorageManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}