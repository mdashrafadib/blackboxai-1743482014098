{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import{PDFDocument}from'pdf-lib';var PdfProcessor=function(){function PdfProcessor(){_classCallCheck(this,PdfProcessor);}return _createClass(PdfProcessor,null,[{key:\"loadPDF\",value:function(){var _loadPDF=_asyncToGenerator(function*(file){try{var fileBuffer=yield file.arrayBuffer();var pdf=yield PDFDocument.load(fileBuffer);return pdf;}catch(error){throw new Error(\"Error loading PDF: \"+error.message);}});function loadPDF(_x){return _loadPDF.apply(this,arguments);}return loadPDF;}()},{key:\"mergePDFs\",value:function(){var _mergePDFs=_asyncToGenerator(function*(files){try{var mergedPdf=yield PDFDocument.create();for(var file of files){var pdf=yield this.loadPDF(file);var copiedPages=yield mergedPdf.copyPages(pdf,pdf.getPageIndices());copiedPages.forEach(function(page){return mergedPdf.addPage(page);});}return yield mergedPdf.save();}catch(error){throw new Error(\"Error merging PDFs: \"+error.message);}});function mergePDFs(_x2){return _mergePDFs.apply(this,arguments);}return mergePDFs;}()},{key:\"splitPDF\",value:function(){var _splitPDF=_asyncToGenerator(function*(file,pageRanges){try{var pdf=yield this.loadPDF(file);var results=[];var _loop=function*_loop(){var newPdf=yield PDFDocument.create();var _range$split$map=range.split('-').map(function(num){return parseInt(num);}),_range$split$map2=_slicedToArray(_range$split$map,2),start=_range$split$map2[0],end=_range$split$map2[1];var pageIndices=end?Array.from({length:end-start+1},function(_,i){return start-1+i;}):[start-1];var pages=yield newPdf.copyPages(pdf,pageIndices);pages.forEach(function(page){return newPdf.addPage(page);});results.push({bytes:yield newPdf.save(),range:range});};for(var range of pageRanges){yield*_loop();}return results;}catch(error){throw new Error(\"Error splitting PDF: \"+error.message);}});function splitPDF(_x3,_x4){return _splitPDF.apply(this,arguments);}return splitPDF;}()},{key:\"compressPDF\",value:function(){var _compressPDF=_asyncToGenerator(function*(file,compressionLevel){try{var pdf=yield this.loadPDF(file);var compressedPdf=yield PDFDocument.create();var pages=yield compressedPdf.copyPages(pdf,pdf.getPageIndices());pages.forEach(function(page){return compressedPdf.addPage(page);});var options={useObjectStreams:true};return yield compressedPdf.save(options);}catch(error){throw new Error(\"Error compressing PDF: \"+error.message);}});function compressPDF(_x5,_x6){return _compressPDF.apply(this,arguments);}return compressPDF;}()},{key:\"saveToDevice\",value:function(){var _saveToDevice=_asyncToGenerator(function*(bytes,filename){try{if(Platform.OS==='web'){var blob=new Blob([bytes],{type:'application/pdf'});var url=URL.createObjectURL(blob);var link=document.createElement('a');link.href=url;link.download=filename;link.click();URL.revokeObjectURL(url);return true;}else{return yield StorageManager.saveFile(filename,bytes);}}catch(error){throw new Error(\"Error saving PDF: \"+error.message);}});function saveToDevice(_x7,_x8){return _saveToDevice.apply(this,arguments);}return saveToDevice;}()},{key:\"validatePageRange\",value:function validatePageRange(range,totalPages){var _range$split$map3=range.split('-').map(function(num){return parseInt(num);}),_range$split$map4=_slicedToArray(_range$split$map3,2),start=_range$split$map4[0],end=_range$split$map4[1];if(isNaN(start))return false;if(end&&isNaN(end))return false;if(end&&end<start)return false;if(start<1||start>totalPages)return false;if(end&&(end<1||end>totalPages))return false;return true;}},{key:\"formatFileSize\",value:function formatFileSize(bytes){if(bytes===0)return'0 Bytes';var k=1024;var sizes=['Bytes','KB','MB','GB'];var i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(2))+' '+sizes[i];}}]);}();export default PdfProcessor;","map":{"version":3,"names":["PDFDocument","PdfProcessor","_classCallCheck","_createClass","key","value","_loadPDF","_asyncToGenerator","file","fileBuffer","arrayBuffer","pdf","load","error","Error","message","loadPDF","_x","apply","arguments","_mergePDFs","files","mergedPdf","create","copiedPages","copyPages","getPageIndices","forEach","page","addPage","save","mergePDFs","_x2","_splitPDF","pageRanges","results","_loop","newPdf","_range$split$map","range","split","map","num","parseInt","_range$split$map2","_slicedToArray","start","end","pageIndices","Array","from","length","_","i","pages","push","bytes","splitPDF","_x3","_x4","_compressPDF","compressionLevel","compressedPdf","options","useObjectStreams","compressPDF","_x5","_x6","_saveToDevice","filename","Platform","OS","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","StorageManager","saveFile","saveToDevice","_x7","_x8","validatePageRange","totalPages","_range$split$map3","_range$split$map4","isNaN","formatFileSize","k","sizes","Math","floor","log","parseFloat","pow","toFixed"],"sources":["/project/sandbox/user-workspace/src/utils/PdfProcessor.js"],"sourcesContent":["import { PDFDocument } from 'pdf-lib';\n\nclass PdfProcessor {\n  static async loadPDF(file) {\n    try {\n      const fileBuffer = await file.arrayBuffer();\n      const pdf = await PDFDocument.load(fileBuffer);\n      return pdf;\n    } catch (error) {\n      throw new Error(`Error loading PDF: ${error.message}`);\n    }\n  }\n\n  static async mergePDFs(files) {\n    try {\n      const mergedPdf = await PDFDocument.create();\n\n      for (const file of files) {\n        const pdf = await this.loadPDF(file);\n        const copiedPages = await mergedPdf.copyPages(pdf, pdf.getPageIndices());\n        copiedPages.forEach((page) => mergedPdf.addPage(page));\n      }\n\n      return await mergedPdf.save();\n    } catch (error) {\n      throw new Error(`Error merging PDFs: ${error.message}`);\n    }\n  }\n\n  static async splitPDF(file, pageRanges) {\n    try {\n      const pdf = await this.loadPDF(file);\n      const results = [];\n\n      for (const range of pageRanges) {\n        const newPdf = await PDFDocument.create();\n        const [start, end] = range.split('-').map(num => parseInt(num));\n        \n        const pageIndices = end \n          ? Array.from({ length: end - start + 1 }, (_, i) => start - 1 + i)\n          : [start - 1];\n        \n        const pages = await newPdf.copyPages(pdf, pageIndices);\n        pages.forEach(page => newPdf.addPage(page));\n        \n        results.push({\n          bytes: await newPdf.save(),\n          range: range\n        });\n      }\n\n      return results;\n    } catch (error) {\n      throw new Error(`Error splitting PDF: ${error.message}`);\n    }\n  }\n\n  static async compressPDF(file, compressionLevel) {\n    try {\n      const pdf = await this.loadPDF(file);\n      const compressedPdf = await PDFDocument.create();\n      \n      // Copy pages\n      const pages = await compressedPdf.copyPages(pdf, pdf.getPageIndices());\n      pages.forEach(page => compressedPdf.addPage(page));\n\n      // Compression options based on level (1-100)\n      const options = {\n        useObjectStreams: true,\n        // Add more compression options based on level\n        // This is a simplified version - in production you'd want more sophisticated compression\n      };\n\n      return await compressedPdf.save(options);\n    } catch (error) {\n      throw new Error(`Error compressing PDF: ${error.message}`);\n    }\n  }\n\n  static async saveToDevice(bytes, filename) {\n    try {\n      if (Platform.OS === 'web') {\n        const blob = new Blob([bytes], { type: 'application/pdf' });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = filename;\n        link.click();\n        URL.revokeObjectURL(url);\n        return true;\n      } else {\n        // For Android, we'll use StorageManager\n        return await StorageManager.saveFile(filename, bytes);\n      }\n    } catch (error) {\n      throw new Error(`Error saving PDF: ${error.message}`);\n    }\n  }\n\n  static validatePageRange(range, totalPages) {\n    const [start, end] = range.split('-').map(num => parseInt(num));\n    \n    if (isNaN(start)) return false;\n    if (end && isNaN(end)) return false;\n    if (end && end < start) return false;\n    if (start < 1 || start > totalPages) return false;\n    if (end && (end < 1 || end > totalPages)) return false;\n    \n    return true;\n  }\n\n  static formatFileSize(bytes) {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  }\n}\n\nexport default PdfProcessor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}